"use strict";function registerServiceWorker(e){navigator.serviceWorker&&navigator.serviceWorker.register(e).then(function(){console.log("Service Worker has been successfully registered!")}).catch(function(){console.log("Service Worker Registration failed!")})}function fetchData(e){var t=new Promise(function(e,t){fetch("https://planetrain.herokuapp.com/api/tripdata?direction_id=0").then(function(e){return e.json()}).catch(function(e){readAll("eastTimes"),t(e)}).then(function(e){e[0].forEach(function(e){east.stopNames.push(e)}),e[1].forEach(function(e){east.stopTimes.push(e)})}).then(function(){e(east)}).catch(function(e){t(e)})}),n=new Promise(function(e,t){fetch("https://planetrain.herokuapp.com/api/tripdata?direction_id=1").then(function(e){return e.json()}).catch(function(e){console.log(e)}).then(function(e){e[0].forEach(function(e){west.stopNames.push(e)}),e[1].forEach(function(e){west.stopTimes.push(e)})}).then(function(){e(west)}).catch(function(e){readAll("westTimes"),t(e)})});Promise.all([t,n]).then(e)}function buildIndexDb(){var e=window.indexedDB.open("gtfs",currentVersion);e.onerror=function(e){console.log("error: ")},e.onsuccess=function(t){db=e.result,console.log("success: "+db)},e.onupgradeneeded=function(e){east.stopTimes.sort(),west.stopTimes.sort();var t=e.target.result;t.createObjectStore("eastNames",{autoIncrement:!0}).add(east.stopNames),t.createObjectStore("westNames",{autoIncrement:!0}).add(west.stopNames);var n=t.createObjectStore("eastTimes",{autoIncrement:!0});east.stopTimes.forEach(function(e){n.add(e)});var o=t.createObjectStore("westTimes",{autoIncrement:!0});west.stopTimes.forEach(function(e){o.add(e)})}}function readOne(e){return new Promise(function(t,n){var o=db.transaction([e]),s=o.objectStore(e),r=s.get(1);r.onerror=function(e){console.log("Unable to retrieve data from database!")},r.onsuccess=function(e){r.result?t(r.result):(console.log("header promise failed"),n())}})}function readAll(e){return new Promise(function(t,n){function o(){i.length>71?t(i):setTimeout(function(){o()},25)}if(!s){var s=window.indexedDB.open("gtfs",currentVersion);s.onerror=function(e){console.log("error: ")},s.onsuccess=function(e){db=s.result,console.log("configured local db: "+db)}}var r=db.transaction(e).objectStore(e),i=[];r.openCursor().onsuccess=function(e){var t=e.target.result;t&&(i.push(t.value),t.continue())},o()})}function retreiveTimes(e){readAll(e).then(function(e){var t="";e.forEach(function(e){t+="<tr>",e.forEach(function(e){t+="<td>",t+=e,t+="</td>"}),t+="</tr>"}),$(".main-time-table > tbody").append(t)})}function buildTheHeader(e){readOne(e).then(function(e){var t="";e.forEach(function(e){t+="<th>",t+=e,t+="</th>"}),$(".main-time-table > tbody").html(t)})}function eastBound(){buildTheHeader("eastNames"),retreiveTimes("eastTimes"),$("button.eastbound").css("display","none"),$("button.westbound").css("display","block"),$(".westbound-form").css("display","none"),$(".eastbound-form").css("display","block")}function westBound(){buildTheHeader("westNames"),retreiveTimes("westTimes"),$("button.eastbound").css("display","block"),$("button.westbound").css("display","none"),$(".westbound-form").css("display","block"),$(".eastbound-form").css("display","none")}registerServiceWorker("/sw.js");var east={stopNames:[],stopTimes:[]},west={stopNames:[],stopTimes:[]},db,currentVersion=1;window.indexedDB?navigator.onLine?fetchData(buildIndexDb):console.log("Browser offline -- not refreshing indexDB "):console.log(new Error,"IndexedDB does not work on this browser, failing over to cache");